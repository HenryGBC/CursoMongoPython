{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "quantopian.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjun4", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "theandycamps", "media": null, "score": 53, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 21, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sjun4/your_python_stock_trading_algorithm_100000_of_our/", "name": "t3_2sjun4", "created": 1421382223.0, "url": "https://www.quantopian.com/open?utm_source=reddit&amp;utm_medium=web&amp;utm_content=pythonsubreddit&amp;utm_campaign=contestblast", "author_flair_text": null, "title": "Your Python Stock Trading Algorithm, $100,000 of Our Money, &amp; You Keep the Profit", "created_utc": 1421353423.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 53}}, {"kind": "t3", "data": {"domain": "developers.google.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sgv6d", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "rasbt", "media": null, "score": 336, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 41, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sgv6d/probably_the_best_tutorial_on_regular_expressions/", "name": "t3_2sgv6d", "created": 1421314604.0, "url": "https://developers.google.com/edu/python/regular-expressions", "author_flair_text": null, "title": "Probably the best tutorial on regular expressions I have ever read", "created_utc": 1421285804.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 336}}, {"kind": "t3", "data": {"domain": "pythonforengineers.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjw0v", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "pysk00l", "media": null, "score": 10, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sjw0v/python_is_the_most_popular_language_on_reddit/", "name": "t3_2sjw0v", "created": 1421382807.0, "url": "http://pythonforengineers.com/the-most-popular-programming-languages-on-reddit/", "author_flair_text": null, "title": "Python is the most popular language on Reddit", "created_utc": 1421354007.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sk36k", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "lobocv", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sk36k/pyperform_a_fast_and_convenient_way_to/", "name": "t3_2sk36k", "created": 1421385970.0, "url": "https://github.com/lobocv/pyperform", "author_flair_text": null, "title": "PyPerform - A fast and convenient way to performance test your code.", "created_utc": 1421357170.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "blog.europython.eu", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjbtp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "petrux", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sjbtp/europython_2015_come_join_us_from_july_2026_in/", "name": "t3_2sjbtp", "created": 1421373909.0, "url": "http://blog.europython.eu/post/108162595557/europython-2015-come-join-us-from-july-20-26-in", "author_flair_text": null, "title": "EuroPython 2015: Come join us from July 20-26 in Bilbao!", "created_utc": 1421345109.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 9}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is a serious question. I must say that I am very impressed with web.py. I am new to Python, but I am an experienced C# developer.&lt;/p&gt;\n\n&lt;p&gt;Web.py has really impressed me. I&amp;#39;ve only written a few &amp;#39;hello world&amp;#39; type web apps with it, but I like everything I&amp;#39;m seeing. Before trying web.py I tried Django. Django was okay, but I didn&amp;#39;t like the amount of &amp;#39;automagical&amp;#39; stuff that it provided. I didn&amp;#39;t feel like I was in control of the application, whereas web.py makes me feel confident that I know every part of the executing logic.&lt;/p&gt;\n\n&lt;p&gt;However, I think there are warning signs with web.py that is cooling my enthusiasm for it. First, there hasn&amp;#39;t been a commit on github to it in 10 months. Also, Reddit is no longer using it for it&amp;#39;s architecture. Also, for me to run it on windows with Python 2.7 I needed to modify a line of code that checked for ipv6 which wasn&amp;#39;t compatible with the windows version of Python. (&lt;a href=\"https://github.com/webpy/webpy/issues/308\"&gt;https://github.com/webpy/webpy/issues/308&lt;/a&gt;) I&amp;#39;m not sure if these are legitimate reasons to not use it, though.&lt;/p&gt;\n\n&lt;p&gt;Is web.py still a good mindshare investment? Are there any other web micro-frameworks that should be considered above web.py? Perhaps something like Flask should be considered, but I really like how web.py is completely standalone. &lt;/p&gt;\n\n&lt;p&gt;Thanks for any pointers.&lt;/p&gt;\n\n&lt;p&gt;[edit]\nAfter reading some other threads in r/python, it looks like Bottle might be an alternative to web.py.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This is a serious question. I must say that I am very impressed with web.py. I am new to Python, but I am an experienced C# developer.\n\nWeb.py has really impressed me. I've only written a few 'hello world' type web apps with it, but I like everything I'm seeing. Before trying web.py I tried Django. Django was okay, but I didn't like the amount of 'automagical' stuff that it provided. I didn't feel like I was in control of the application, whereas web.py makes me feel confident that I know every part of the executing logic.\n\nHowever, I think there are warning signs with web.py that is cooling my enthusiasm for it. First, there hasn't been a commit on github to it in 10 months. Also, Reddit is no longer using it for it's architecture. Also, for me to run it on windows with Python 2.7 I needed to modify a line of code that checked for ipv6 which wasn't compatible with the windows version of Python. (https://github.com/webpy/webpy/issues/308) I'm not sure if these are legitimate reasons to not use it, though.\n\nIs web.py still a good mindshare investment? Are there any other web micro-frameworks that should be considered above web.py? Perhaps something like Flask should be considered, but I really like how web.py is completely standalone. \n\nThanks for any pointers.\n\n[edit]\nAfter reading some other threads in r/python, it looks like Bottle might be an alternative to web.py.", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjghv", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "yeomandev", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 13, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1421348257.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sjghv/is_there_any_reason_to_not_use_webpy/", "name": "t3_2sjghv", "created": 1421375987.0, "url": "http://www.reddit.com/r/Python/comments/2sjghv/is_there_any_reason_to_not_use_webpy/", "author_flair_text": null, "title": "Is there any reason to not use web.py?", "created_utc": 1421347187.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 9}}, {"kind": "t3", "data": {"domain": "gist.github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2skdqo", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "subsonic68", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2skdqo/python_script_to_search_cisco_cucm_call_detail/", "name": "t3_2skdqo", "created": 1421390794.0, "url": "https://gist.github.com/sdcampbell/962a8d1a0c1c0b510e73", "author_flair_text": null, "title": "Python script to search Cisco CUCM Call Detail Records", "created_utc": 1421361994.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://twitter.com/NikolaTunes\"&gt;https://twitter.com/NikolaTunes&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;I made a Twitter bot using Tweepy, that tweets out songs I am currently listening to in iTunes (used appscript for that). To avoid printing every song while skipping through many at once, I made it so it only posts songs that have been playing for at least 30 seconds. This is one of my first projects in Python, so any advice would be appreciated. I will post the code on my GitHub page when I clean it up a little bit. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "https://twitter.com/NikolaTunes \n\nI made a Twitter bot using Tweepy, that tweets out songs I am currently listening to in iTunes (used appscript for that). To avoid printing every song while skipping through many at once, I made it so it only posts songs that have been playing for at least 30 seconds. This is one of my first projects in Python, so any advice would be appreciated. I will post the code on my GitHub page when I clean it up a little bit. \n", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sj6kh", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "PZLATE", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sj6kh/python_based_project_i_just_finished_check_it_out/", "name": "t3_2sj6kh", "created": 1421371460.0, "url": "http://www.reddit.com/r/Python/comments/2sj6kh/python_based_project_i_just_finished_check_it_out/", "author_flair_text": null, "title": "Python based project I just finished, check it out if you have a second!", "created_utc": 1421342660.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"domain": "sebastianraschka.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sinhp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "rasbt", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sinhp/a_majority_vote_and_probability_average/", "name": "t3_2sinhp", "created": 1421361839.0, "url": "http://sebastianraschka.com/Articles/2014_ensemble_classifier.html", "author_flair_text": null, "title": "A Majority Vote and Probability Average EnsembleClassifier for scikit-learn -- useful on Kaggle", "created_utc": 1421333039.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 8}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/u/DeltaBot\"&gt;/u/DeltaBot&lt;/a&gt; is a score-keeping bot written for &lt;a href=\"/r/changemyview\"&gt;/r/changemyview&lt;/a&gt;&amp;#39;s delta system. Since its beginning over a year ago, it&amp;#39;s been a slow process trying to find people to help finish it. We&amp;#39;ve had quite a few people pop in and out, write a line here or there, some in fact helped quite significantly, but the help dwindled and now we still have an unfinished script.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/alexames/DeltaBot\"&gt;Here is the code&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Part of the reason it dwindled was one or two of the mods of CMV actually volunteered to take on the project, with one of them taking it upon themselves to rewrite it from scratch, as one of the problems (apparently - I have no coding knowledge) was that the code was messy and a bit all over the place. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/PixelOrange/MARS\"&gt;Here is this rewritten code&lt;/a&gt;. (I&amp;#39;m pretty sure this is the one currently being used.)&lt;/p&gt;\n\n&lt;p&gt;However, the author became unable to continue, and this is now also unfinished. I asked the author if he could give me a quick summary of its situation:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;As of right now, the major thing is that it&amp;#39;s not compatible with the current wiki. If we &amp;quot;started over&amp;quot; and wiped out all non-conformed pages, I could probably implement now and it would work. Trying to convert it is possible but there are so, so many pages that it would be very difficult.&lt;/p&gt;\n\n&lt;p&gt;Obviously, losing information is not ideal but on the flip-side, the new code will sort the data in the way that you asked for so long ago.\nThe major missing thing of the new code is the leaderboards. I could probably add that without much issue.&lt;/p&gt;\n\n&lt;p&gt;Uhhhh, other than that I&amp;#39;m not sure what it needs that I don&amp;#39;t have working. The wiki has been the sticking point since the last time I looked at the code.&lt;/p&gt;\n\n&lt;p&gt;A third option is to take all /user/ pages and port them to /user/old/ or append an &amp;quot;-old&amp;quot; to the end of all usernames and then just adding a link to the new history that links them to the old data.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Other than what has been mentioned above, please have a look through the issues lists of the &lt;a href=\"https://github.com/alexames/DeltaBot/issues\"&gt;first repo&lt;/a&gt; and &lt;a href=\"https://github.com/PixelOrange/MARS/issues\"&gt;second repo&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;As I&amp;#39;m unsure of the code side of things, I can only comment on the feature requests. One of the main things is to get the delta leaderboard up and running again (it used to work), and make sure it&amp;#39;s fairly listed this time. Also, for a long time I&amp;#39;ve been interested in getting &lt;a href=\"https://github.com/alexames/DeltaBot/issues/4\"&gt;this idea&lt;/a&gt; working. I would be very grateful if anybody knew how to do that :)&lt;/p&gt;\n\n&lt;p&gt;Let me know if you&amp;#39;re interested, although you don&amp;#39;t need my permission to have a go at it of course! Thanks :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "/u/DeltaBot is a score-keeping bot written for /r/changemyview's delta system. Since its beginning over a year ago, it's been a slow process trying to find people to help finish it. We've had quite a few people pop in and out, write a line here or there, some in fact helped quite significantly, but the help dwindled and now we still have an unfinished script.\n\n[Here is the code](https://github.com/alexames/DeltaBot).\n\nPart of the reason it dwindled was one or two of the mods of CMV actually volunteered to take on the project, with one of them taking it upon themselves to rewrite it from scratch, as one of the problems (apparently - I have no coding knowledge) was that the code was messy and a bit all over the place. \n\n[Here is this rewritten code](https://github.com/PixelOrange/MARS). (I'm pretty sure this is the one currently being used.)\n\nHowever, the author became unable to continue, and this is now also unfinished. I asked the author if he could give me a quick summary of its situation:\n\n&gt; As of right now, the major thing is that it's not compatible with the current wiki. If we \"started over\" and wiped out all non-conformed pages, I could probably implement now and it would work. Trying to convert it is possible but there are so, so many pages that it would be very difficult.\n\n&gt; Obviously, losing information is not ideal but on the flip-side, the new code will sort the data in the way that you asked for so long ago.\nThe major missing thing of the new code is the leaderboards. I could probably add that without much issue.\n\n&gt; Uhhhh, other than that I'm not sure what it needs that I don't have working. The wiki has been the sticking point since the last time I looked at the code.\n\n&gt; A third option is to take all /user/ pages and port them to /user/old/ or append an \"-old\" to the end of all usernames and then just adding a link to the new history that links them to the old data.\n\nOther than what has been mentioned above, please have a look through the issues lists of the [first repo](https://github.com/alexames/DeltaBot/issues) and [second repo](https://github.com/PixelOrange/MARS/issues). \n\nAs I'm unsure of the code side of things, I can only comment on the feature requests. One of the main things is to get the delta leaderboard up and running again (it used to work), and make sure it's fairly listed this time. Also, for a long time I've been interested in getting [this idea](https://github.com/alexames/DeltaBot/issues/4) working. I would be very grateful if anybody knew how to do that :)\n\nLet me know if you're interested, although you don't need my permission to have a go at it of course! Thanks :)\n", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2simld", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Snorrrlax", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2simld/rchangemyview_is_looking_for_people_to_help/", "name": "t3_2simld", "created": 1421361309.0, "url": "http://www.reddit.com/r/Python/comments/2simld/rchangemyview_is_looking_for_people_to_help/", "author_flair_text": null, "title": "/r/changemyview is looking for people to help improve DeltaBot.", "created_utc": 1421332509.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This will be for a Twitter bot running on GAE, if that matters. BONUS POINTS if the tool allows me to warp the text along a curve.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This will be for a Twitter bot running on GAE, if that matters. BONUS POINTS if the tool allows me to warp the text along a curve.", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjg9e", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "JonathanHarford", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sjg9e/given_an_image_and_some_text_whats_the_best_tool/", "name": "t3_2sjg9e", "created": 1421375879.0, "url": "http://www.reddit.com/r/Python/comments/2sjg9e/given_an_image_and_some_text_whats_the_best_tool/", "author_flair_text": null, "title": "Given an image and some text, what's the best tool to create an image of the text \"engraved\" on the image?", "created_utc": 1421347079.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I realize my question is kinda like the &amp;quot;I&amp;#39;m not a racist, but&amp;quot; things people say.&lt;/p&gt;\n\n&lt;p&gt;However, I&amp;#39;m genuinely curious what people see as &amp;quot;the positive thing&amp;quot; about one or the other of these 2 frameworks. &amp;quot;BlaBloy is better cuz it just is&amp;quot; doesn&amp;#39;t help anyone.&lt;/p&gt;\n\n&lt;p&gt;I have my own opinion, but I&amp;#39;ll leave it out as I don&amp;#39;t want to taint the thread from the word go.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I realize my question is kinda like the \"I'm not a racist, but\" things people say.\n\nHowever, I'm genuinely curious what people see as \"the positive thing\" about one or the other of these 2 frameworks. \"BlaBloy is better cuz it just is\" doesn't help anyone.\n\nI have my own opinion, but I'll leave it out as I don't want to taint the thread from the word go.", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sk436", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "monsto", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sk436/not_another_versus_post_but_who_has_used_django/", "name": "t3_2sk436", "created": 1421386365.0, "url": "http://www.reddit.com/r/Python/comments/2sk436/not_another_versus_post_but_who_has_used_django/", "author_flair_text": null, "title": "Not another versus post, but who has used Django or/and Pyramid, and what do you believe are the top 3 diffs between them?", "created_utc": 1421357565.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Using a guide (which I&amp;#39;ve referenced within the code) I have created my first python &amp;#39;app&amp;#39; (i.e. it uses more than 1 library and has a basic GUI).  &lt;/p&gt;\n\n&lt;p&gt;Could somebody who is wiser than myself please give me some advice on the following matters:\n1. Any SERIOUS flaws in the code? For all intents and purposes it &amp;#39;works&amp;#39;. However, it was a &amp;#39;learn as you go&amp;#39; kinda thing so I&amp;#39;m sure there&amp;#39;s some serious flaws. Off head, I&amp;#39;ve used 2 globals - can I achieve the same thing using local variables? The global lightstatus_1 is poor because it will only keep the most recent status of 1 light (I have 5). There&amp;#39;s some redundant/commented out code that needs removing...etc. Obviously the &amp;#39;gui&amp;#39; is pretty sucky right now, but I guess my plan is to get the app to work smoothly before making it all pretty.&lt;br/&gt;\n2. On that note, does anybody know how to get the status of a light using pyhue? This would probably solve some of my woes with the &amp;#39;boolean&amp;#39; (which is actually a string).&lt;br/&gt;\n3. Does anybody know how to turn this into an executable file that I can distribute? I heard that freeze does the job, however, couldn&amp;#39;t find freeze on my raspberry pi (&amp;#39;python freeze.py hueberry.py&amp;#39;).&lt;br/&gt;\n4. This is running on a touch screen so the lights don&amp;#39;t always go on/off reliably. Actually... they go on and then off instantly (or usually just sit there flashing) on a pretty consistent basis unless I use a VNC with an actual &amp;#39;mouse click&amp;#39;. Also, once you click on a &amp;#39;button&amp;#39; it still looks like you&amp;#39;re hovering over it (I guess because the &amp;#39;mouse position&amp;#39; aka touch is in that position). Any tips on how I could work around this?&lt;br/&gt;\n5. A big issue is that the 5 lights in my house are hard coded. Any advice on how I could go about identifying only the lights that exist and displaying them? I would want this in the most &amp;#39;dynamic&amp;#39; way possible.  &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for your advice!!  &lt;/p&gt;\n\n&lt;p&gt;URL for code&lt;br/&gt;\n&lt;a href=\"http://txt.do/6tzs\"&gt;http://txt.do/6tzs&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;FWIW this is for my &amp;#39;hueberry&amp;#39; project (&lt;a href=\"http://www.instructables.com/id/Hueberry/\"&gt;http://www.instructables.com/id/Hueberry/&lt;/a&gt;). While I originally used Bash scripts, I&amp;#39;m now moving towards a pygame GUI. You might want to comment on whether I&amp;#39;ve picked the right tools. So-far I like pygame (seems quite simple and easy to learn... I wrote the above in ~20 minutes and it was my first shot at it).  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Using a guide (which I've referenced within the code) I have created my first python 'app' (i.e. it uses more than 1 library and has a basic GUI).  \n\nCould somebody who is wiser than myself please give me some advice on the following matters:\n1. Any SERIOUS flaws in the code? For all intents and purposes it 'works'. However, it was a 'learn as you go' kinda thing so I'm sure there's some serious flaws. Off head, I've used 2 globals - can I achieve the same thing using local variables? The global lightstatus_1 is poor because it will only keep the most recent status of 1 light (I have 5). There's some redundant/commented out code that needs removing...etc. Obviously the 'gui' is pretty sucky right now, but I guess my plan is to get the app to work smoothly before making it all pretty.  \n2. On that note, does anybody know how to get the status of a light using pyhue? This would probably solve some of my woes with the 'boolean' (which is actually a string).  \n3. Does anybody know how to turn this into an executable file that I can distribute? I heard that freeze does the job, however, couldn't find freeze on my raspberry pi ('python freeze.py hueberry.py').  \n4. This is running on a touch screen so the lights don't always go on/off reliably. Actually... they go on and then off instantly (or usually just sit there flashing) on a pretty consistent basis unless I use a VNC with an actual 'mouse click'. Also, once you click on a 'button' it still looks like you're hovering over it (I guess because the 'mouse position' aka touch is in that position). Any tips on how I could work around this?  \n5. A big issue is that the 5 lights in my house are hard coded. Any advice on how I could go about identifying only the lights that exist and displaying them? I would want this in the most 'dynamic' way possible.  \n\nThanks in advance for your advice!!  \n\nURL for code  \nhttp://txt.do/6tzs  \n  \nFWIW this is for my 'hueberry' project (http://www.instructables.com/id/Hueberry/). While I originally used Bash scripts, I'm now moving towards a pygame GUI. You might want to comment on whether I've picked the right tools. So-far I like pygame (seems quite simple and easy to learn... I wrote the above in ~20 minutes and it was my first shot at it).  ", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjz0n", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Gambizzle", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1421355714.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sjz0n/advice_wanted_my_first_python_pygame_app_that/", "name": "t3_2sjz0n", "created": 1421384123.0, "url": "http://www.reddit.com/r/Python/comments/2sjz0n/advice_wanted_my_first_python_pygame_app_that/", "author_flair_text": null, "title": "Advice wanted (my first python [pygame] app that controls the lights)", "created_utc": 1421355323.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys, &lt;/p&gt;\n\n&lt;p&gt;I was just wondering if you know how to make good startup screens in python for a project that I am doing (I will leave a photo so that you can get a faint idea of what i need a splash screen for). A nice design for it would be fantastic and the sections that I would be needing are &amp;#39;Start&amp;#39;, &amp;#39;Rules&amp;#39; (I will do those) and &amp;#39;Quit&amp;#39; (something that links in with the button &amp;#39;esc&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;I hope that you can find some way to help me guys, I have been struggling to work on this for a while now. The project that I have been working on contains turtle graphics (just saying just in case)&lt;/p&gt;\n\n&lt;p&gt;Thanks again!!!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi guys, \n\nI was just wondering if you know how to make good startup screens in python for a project that I am doing (I will leave a photo so that you can get a faint idea of what i need a splash screen for). A nice design for it would be fantastic and the sections that I would be needing are 'Start', 'Rules' (I will do those) and 'Quit' (something that links in with the button 'esc'.\n\nI hope that you can find some way to help me guys, I have been struggling to work on this for a while now. The project that I have been working on contains turtle graphics (just saying just in case)\n\nThanks again!!!", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjtyg", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "ross_LFC", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sjtyg/startup_splash_screen/", "name": "t3_2sjtyg", "created": 1421381923.0, "url": "http://www.reddit.com/r/Python/comments/2sjtyg/startup_splash_screen/", "author_flair_text": null, "title": "Startup Splash Screen!!!", "created_utc": 1421353123.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "blog.dscpl.com.au", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjti9", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "jgomo3", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sjti9/graham_dumpleton_important_mod_wsgi_information/", "name": "t3_2sjti9", "created": 1421381732.0, "url": "http://blog.dscpl.com.au/2015/01/important-modwsgi-information-about.html", "author_flair_text": null, "title": "Graham Dumpleton: Important mod_wsgi information about coming Apache httpd update.", "created_utc": 1421352932.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m just curious why, given there are a lot of intro Python books. I have a pet hypothesis, but let&amp;#39;s see what you think.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm just curious why, given there are a lot of intro Python books. I have a pet hypothesis, but let's see what you think.", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sjklp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Manbatton", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 6, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sjklp/why_does_every_beginner_now_use_lpthw/", "name": "t3_2sjklp", "created": 1421377827.0, "url": "http://www.reddit.com/r/Python/comments/2sjklp/why_does_every_beginner_now_use_lpthw/", "author_flair_text": null, "title": "Why does every beginner now use LPTHW?", "created_utc": 1421349027.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "importpython.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sj97z", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "versesane", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sj97z/importpython_weekly_issue_17_django_psf_mod_wsgi/", "name": "t3_2sj97z", "created": 1421372691.0, "url": "http://importpython.com/newsletter/no/17/", "author_flair_text": "", "title": "ImportPython Weekly Issue 17 - #django #PSF #mod_wsgi #apache #Python3 #iPython #chemistry #TDD #pelican", "created_utc": 1421343891.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m taking part in a hackathon and I want to learn as fast as possible a web framework, so as to build a simple web application.  &lt;/p&gt;\n\n&lt;p&gt;Previous experience so far:&lt;br/&gt;\n* Dabbled in a Ruby on Rails project (got the MVC model, but not much experience with routing)&lt;br/&gt;\n* Worked with a Java EE project from scratch (up to a good point)\n* Know my HTML, CSS, JS&lt;br/&gt;\n* Have worked with Python in some projects (no web applications though)&lt;/p&gt;\n\n&lt;p&gt;Target:&lt;br/&gt;\n* Build a simple web application&lt;br/&gt;\n* Need to learn this framework in ~ 2 days&lt;/p&gt;\n\n&lt;p&gt;Which of the available frameworks should I try?&lt;br/&gt;\nWhat do you recommend?&lt;/p&gt;\n\n&lt;p&gt;Thank you for your time&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;br/&gt;\nThanks a lot for your input, we&amp;#39;ve decided to go with Flask and probably jinja.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello, \n\nI'm taking part in a hackathon and I want to learn as fast as possible a web framework, so as to build a simple web application.  \n\nPrevious experience so far:  \n* Dabbled in a Ruby on Rails project (got the MVC model, but not much experience with routing)  \n* Worked with a Java EE project from scratch (up to a good point)\n* Know my HTML, CSS, JS  \n* Have worked with Python in some projects (no web applications though)\n\nTarget:  \n* Build a simple web application  \n* Need to learn this framework in ~ 2 days\n\nWhich of the available frameworks should I try?    \nWhat do you recommend?\n\nThank you for your time\n\n**EDIT**  \nThanks a lot for your input, we've decided to go with Flask and probably jinja.  \n", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2si6we", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "just_me__", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 18, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1421362566.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2si6we/need_to_learn_a_web_framework_in_two_days_for_a/", "name": "t3_2si6we", "created": 1421348631.0, "url": "http://www.reddit.com/r/Python/comments/2si6we/need_to_learn_a_web_framework_in_two_days_for_a/", "author_flair_text": null, "title": "Need to learn a web framework (in two days) for a basic application that needs to be built in ~5h", "created_utc": 1421319831.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "analyticsvidhya.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sf45g", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kunalj101", "media": null, "score": 76, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 12, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sf45g/created_this_learning_path_to_learn_data_science/", "name": "t3_2sf45g", "created": 1421285601.0, "url": "http://www.analyticsvidhya.com/blog/learning-path-data-science-python/", "author_flair_text": null, "title": "Created this learning path to learn data science on Python. Do let me know any suggestions / feedback", "created_utc": 1421256801.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 76}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I created many side projects, one of them even turned to a profitable company but I never create any code that I&amp;#39;m proud to say my own. I mostly wrote spaghetti code. Before finishing my major in CS I want to create an open source project that I&amp;#39;ll be proud of.&lt;/p&gt;\n\n&lt;p&gt;The project: A simple and elegant site that collects top reddit posts along with their top comments on daily basis and presents them in highly readable and sharable interface. Like Buzzfeed but with much better content and without annoying link baits. &lt;/p&gt;\n\n&lt;p&gt;I can make this ready in one day with spaghetti code but I need this to be similar to professional experience. Working with others, proper commits and comments, maybe peer reviewing, using proper structures, OOD, MVC, unit tests, etc. &lt;/p&gt;\n\n&lt;p&gt;Do you have any &lt;strong&gt;advice&lt;/strong&gt; to create such an environment? (Frameworks, stacks, tools, general advice)&lt;/p&gt;\n\n&lt;p&gt;Would anyone like to join me? (You don&amp;#39;t have to actively contribute, a few hrs/week is fine)&lt;/p&gt;\n\n&lt;p&gt;PS: I have SEM experience and created bunch of high traffic sites on LAMP stack so despite my lack of professional experience, I can contribute significantly.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I created many side projects, one of them even turned to a profitable company but I never create any code that I'm proud to say my own. I mostly wrote spaghetti code. Before finishing my major in CS I want to create an open source project that I'll be proud of.\n\nThe project: A simple and elegant site that collects top reddit posts along with their top comments on daily basis and presents them in highly readable and sharable interface. Like Buzzfeed but with much better content and without annoying link baits. \n\nI can make this ready in one day with spaghetti code but I need this to be similar to professional experience. Working with others, proper commits and comments, maybe peer reviewing, using proper structures, OOD, MVC, unit tests, etc. \n\nDo you have any **advice** to create such an environment? (Frameworks, stacks, tools, general advice)\n\nWould anyone like to join me? (You don't have to actively contribute, a few hrs/week is fine)\n\nPS: I have SEM experience and created bunch of high traffic sites on LAMP stack so despite my lack of professional experience, I can contribute significantly.\n", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2shzo9", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "hics", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": 1421317745.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2shzo9/excited_about_an_open_source_project_need_advice/", "name": "t3_2shzo9", "created": 1421341031.0, "url": "http://www.reddit.com/r/Python/comments/2shzo9/excited_about_an_open_source_project_need_advice/", "author_flair_text": null, "title": "Excited about an open source project. Need advice.", "created_utc": 1421312231.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have to maintain a 1500+ lines Python script for work. There were some unit tests written using nosetests, but they haven&amp;#39;t been updated since 2011 so a colleague of mine said I&amp;#39;d rather start from scratch (plus, according to him, they are very poorly written).&lt;/p&gt;\n\n&lt;p&gt;The script was written for Python 2, not sure how compatible it is with Python 3 (it&amp;#39;s made to be run on Ubuntu Linux platforms only).&lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;d like to write unit tests for this script... What should I use? The standard Python lib &lt;a href=\"https://docs.python.org/2/library/unittest.html\"&gt;unittest module&lt;/a&gt;? The &lt;a href=\"https://pypi.python.org/pypi/unittest2\"&gt;backported&lt;/a&gt; &lt;a href=\"https://pypi.python.org/pypi/mock/\"&gt;modules&lt;/a&gt; from Python 3? &lt;a href=\"http://pytest.org/latest/\"&gt;PyTest&lt;/a&gt;? &lt;a href=\"https://nose.readthedocs.org/en/latest/\"&gt;Nosetests&lt;/a&gt;? Something else?&lt;/p&gt;\n\n&lt;p&gt;I liked the &amp;quot;auto-discovery&amp;quot; feature of Nose (you put the tests in a tests directory, and when you run &lt;code&gt;nosetests&lt;/code&gt;, the tests are found and executed automatically).&lt;/p&gt;\n\n&lt;p&gt;Any feedback on what I should use and why I should use it is appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have to maintain a 1500+ lines Python script for work. There were some unit tests written using nosetests, but they haven't been updated since 2011 so a colleague of mine said I'd rather start from scratch (plus, according to him, they are very poorly written).\n\nThe script was written for Python 2, not sure how compatible it is with Python 3 (it's made to be run on Ubuntu Linux platforms only).\n\nSo I'd like to write unit tests for this script... What should I use? The standard Python lib [unittest module](https://docs.python.org/2/library/unittest.html)? The [backported](https://pypi.python.org/pypi/unittest2) [modules](https://pypi.python.org/pypi/mock/) from Python 3? [PyTest](http://pytest.org/latest/)? [Nosetests](https://nose.readthedocs.org/en/latest/)? Something else?\n\nI liked the \"auto-discovery\" feature of Nose (you put the tests in a tests directory, and when you run `nosetests`, the tests are found and executed automatically).\n\nAny feedback on what I should use and why I should use it is appreciated!", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2shoch", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "ePierre", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 6, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2shoch/python_script_to_maintain_what_unit_tests/", "name": "t3_2shoch", "created": 1421331066.0, "url": "http://www.reddit.com/r/Python/comments/2shoch/python_script_to_maintain_what_unit_tests/", "author_flair_text": null, "title": "Python script to maintain, what unit tests library/package to use?", "created_utc": 1421302266.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;As I made my very first Python app I would like to have some review about the code.\nThis was a dead simple app for my daughter, submitting random multiplications operations and asking for the result, displaying an image if the result is good, another if not, and incrementing a score.&lt;/p&gt;\n\n&lt;p&gt;Any advice for future and / or rework this code is welcome.&lt;/p&gt;\n\n&lt;p&gt;Here is the code : &lt;a href=\"https://github.com/tiipiik/MultiplicationApp\"&gt;https://github.com/tiipiik/MultiplicationApp&lt;/a&gt; (Python 2.7 if I&amp;#39;m correct)&lt;/p&gt;\n\n&lt;p&gt;Thanks :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi,\n\nAs I made my very first Python app I would like to have some review about the code.\nThis was a dead simple app for my daughter, submitting random multiplications operations and asking for the result, displaying an image if the result is good, another if not, and incrementing a score.\n\nAny advice for future and / or rework this code is welcome.\n\nHere is the code : https://github.com/tiipiik/MultiplicationApp (Python 2.7 if I'm correct)\n\nThanks :)", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sij0h", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "tiipiik", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 5, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sij0h/python_very_first_projet_review/", "name": "t3_2sij0h", "created": 1421359095.0, "url": "http://www.reddit.com/r/Python/comments/2sij0h/python_very_first_projet_review/", "author_flair_text": null, "title": "Python very first projet review", "created_utc": 1421330295.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know this question has been asked over a billion times, and I&amp;#39;ve read of multiple people arguing about it as well as reading through the official python wiki.&lt;/p&gt;\n\n&lt;p&gt;The bottom line answer is always &lt;em&gt;&amp;quot;If you can do what you want to do with 3.3 go for 3.3!&amp;quot;&lt;/em&gt; \nHere&amp;#39;s my dilemma, I don&amp;#39;t know what I want to do. I&amp;#39;m currently half-way through the &amp;quot;Lean Python the Hard Way&amp;quot; book and was looking at some projects I&amp;#39;d like to take on just to get to code a bit. I was interested in using some framework such as Django to start working on a beginner back-end.&lt;/p&gt;\n\n&lt;p&gt;Should I finish the book which is in 2.7 or shall I go for the 3.3 path?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d also be fine learning 2.7 and then upgrade to 3.3, just wondering what you&amp;#39;d do if you were in my position.&lt;/p&gt;\n\n&lt;p&gt;EDIT: spelling&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I know this question has been asked over a billion times, and I've read of multiple people arguing about it as well as reading through the official python wiki.\n\nThe bottom line answer is always *\"If you can do what you want to do with 3.3 go for 3.3!\"* \nHere's my dilemma, I don't know what I want to do. I'm currently half-way through the \"Lean Python the Hard Way\" book and was looking at some projects I'd like to take on just to get to code a bit. I was interested in using some framework such as Django to start working on a beginner back-end.\n\n\nShould I finish the book which is in 2.7 or shall I go for the 3.3 path?\n\nI'd also be fine learning 2.7 and then upgrade to 3.3, just wondering what you'd do if you were in my position.\n\nEDIT: spelling", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2siofh", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "sublimeapple", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 10, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2siofh/27_or_33_my_dilemma/", "name": "t3_2siofh", "created": 1421362368.0, "url": "http://www.reddit.com/r/Python/comments/2siofh/27_or_33_my_dilemma/", "author_flair_text": null, "title": "2.7 or 3.3 my dilemma.", "created_utc": 1421333568.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "gabrielelanaro.github.io", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sho4k", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "gabrielelanaro", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": false, "permalink": "/r/Python/comments/2sho4k/visualizing_molecular_orbitals_in_the_ipython/", "name": "t3_2sho4k", "created": 1421330899.0, "url": "http://gabrielelanaro.github.io/blog/2015/01/14/visualizing-molecular-orbitals-ipython-notebook.html", "author_flair_text": null, "title": "Visualizing Molecular Orbitals in the IPython Notebook", "created_utc": 1421302099.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Ember.js is (arguably) the most popular frontend framework to use with a Rails backend. &lt;/p&gt;\n\n&lt;p&gt;What is the current most popular frontend framework for a Python REST backend? I am aware that all would work but I want to know the most popular one.&lt;/p&gt;\n\n&lt;p&gt;Or do Django and Flask developers prefer to use the built in templating engine?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Ember.js is (arguably) the most popular frontend framework to use with a Rails backend. \n\nWhat is the current most popular frontend framework for a Python REST backend? I am aware that all would work but I want to know the most popular one.\n\nOr do Django and Flask developers prefer to use the built in templating engine?\n\nThanks!", "likes": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2sfbsw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "exceta", "media": null, "score": 14, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 22, "thumbnail": "", "subreddit_id": "t5_2qh0y", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "stickied": false, "is_self": true, "permalink": "/r/Python/comments/2sfbsw/javascript_frontend_for_python_backend/", "name": "t3_2sfbsw", "created": 1421289102.0, "url": "http://www.reddit.com/r/Python/comments/2sfbsw/javascript_frontend_for_python_backend/", "author_flair_text": null, "title": "JavaScript Frontend for Python Backend", "created_utc": 1421260302.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 14}}], "after": "t3_2sfbsw", "before": null}}